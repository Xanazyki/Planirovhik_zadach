import customtkinter as ctk
import tkinter as tk
from PIL import Image, ImageDraw
import sys
import os
import json


ctk.set_appearance_mode('Dark')
ctk.set_default_color_theme('blue')


class StickyNotesApp(ctk.CTk):
    def __init__(self):
        super().__init__()

        self.title('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á')
        self.geometry('900x700')
        self.minsize(700, 500)

        self.tray_icon = None
        self.tray_icon_running = False

        self.create_tray_icon()

        self.protocol('WM_DELETE_WINDOW', self.hide_to_tray)
        self.bind('<Unmap>', self.check_minimize)

        self.create_ui()

        self.deiconify()
        self.lift()
        self.focus_force()

    def check_minimize(self, event):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∫–æ–≥–¥–∞ –æ–∫–Ω–æ –º–∏–Ω–∏–º–∏–∑–∏—Ä—É–µ—Ç—Å—è"""
        if self.state() == 'iconic':
            self.hide_to_tray()

    def create_ui(self):
        """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.grid_rowconfigure(0, weight=1)
        self.grid_columnconfigure(0, weight=1)

        main_frame = ctk.CTkFrame(self)
        main_frame.grid(row=0, column=0, padx=10, pady=10, sticky='nsew')
        main_frame.grid_rowconfigure(0, weight=1)
        main_frame.grid_columnconfigure(0, weight=1)

        self.tabview = ctk.CTkTabview(main_frame)
        self.tabview.grid(row=0, column=0, sticky='nsew')

        self.main_tab = self.tabview.add('–ú–æ–∏ –∑–∞–¥–∞—á–∏')
        self.trash_tab = self.tabview.add('–ö–æ—Ä–∑–∏–Ω–∞')

        for tab_name in ['–ú–æ–∏ –∑–∞–¥–∞—á–∏', '–ö–æ—Ä–∑–∏–Ω–∞']:
            tab = self.tabview.tab(tab_name)
            tab.grid_rowconfigure(0, weight=1)
            tab.grid_columnconfigure(0, weight=1)

        self.setup_main_tab()
        self.setup_trash_tab()
        self.setup_control_panel(main_frame)

    def setup_main_tab(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∫–ª—É–¥–∫—É —Å –∑–∞–¥–∞—á–∞–º–∏"""
        content_frame = ctk.CTkFrame(self.main_tab, fg_color='transparent')
        content_frame.grid(row=0, column=0, sticky='nsew')
        content_frame.grid_rowconfigure(0, weight=1)
        content_frame.grid_columnconfigure(0, weight=1)

        instruction_text = (
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à —Å—Ç–∏–∫–µ—Ä-–ø—Ä–∞–Ω–∏—Ä–æ–≤—â–∏–∫! \n\n'
            '–ù–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è:\n'
            '‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–æ–≤-–∑–∞–¥–∞—á\n'
            '‚Ä¢ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–æ–≤\n'
            '‚Ä¢ –í–∫–ª–∞–¥–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ–º–∞—Ç–∏–∫–∞–º–∏\n'
            '‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –≤ —Ü–≤–µ—Ç–∞—Ö –∏ –¥–µ–¥–ª–∞–π–Ω—ã\n\n'
            '–°–µ–π—á–∞—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç—Ä–µ–µ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∫–æ–Ω–∫—É —Ä—è–¥–æ–º —Å —á–∞—Å–∞–º–∏!'
        )

        instruction_label = ctk.CTkLabel(
            content_frame,
            text=instruction_text,
            font=ctk.CTkFont(size=14),
            text_color='#bdc3c7',
            justify='left'
        )
        instruction_label.grid(row=0, column=0, padx=20, pady=20)

    def setup_trash_tab(self):
        '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã'
        content_frame = ctk.CTkFrame(self.trash_tab, fg_color='transparent')
        content_frame.grid(row=0, column=0, sticky='nsew')
        content_frame.grid_rowconfigure(0, weight=1)
        content_frame.grid_columnconfigure(0, weight=1)

        trash_text = (
            'üóëÔ∏è –ö–æ—Ä–∑–∏–Ω–∞\n\n'
            '–ó–¥–µ—Å—å –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\n'
            '–í—ã —Å–º–æ–∂–µ—Ç–µ:\n'
            '‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∑–∞–¥–∞—á–∏\n'
            '‚Ä¢ –û—á–∏—â–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª–Ω–æ—Å—Ç—å—é\n'
            '‚Ä¢ –í–∏–¥–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∞–≤–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á'
        )

        trash_label = ctk.CTkLabel(
            content_frame,
            text=trash_text,
            font=ctk.CTkFont(size=14),
            text_color='#7f8c8d',
            justify='center'
        )
        trash_label.grid(row=0, column=0, padx=20, pady=20)

    def setup_control_panel(self, parent):
        """–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–Ω–∏–∑—É –æ–∫–Ω–∞"""
        control_frame = ctk.CTkFrame(parent)
        control_frame.grid(row=1, column=0, padx=0, pady=(10, 0), sticky='ew')

        left_frame = ctk.CTkFrame(control_frame, fg_color='transparent')
        left_frame.pack(side='left', padx=10, pady=10)

        self.tray_btn = ctk.CTkButton(
            left_frame,
            text='üìå –°–≤–µ—Ä–Ω—É—Ç—å –≤ —Ç—Ä–µ–π',
            command=self.hide_to_tray,
            width=120,
            fg_color='#2c3e50',
            hover='#34495e'
        )
        self.tray_btn.pack(side='left', padx=(0, 10))

        right_frame = ctk.CTkFrame(control_frame, fg_color='transparent')
        right_frame.pack(side='right', padx=10, pady=10)

        self.tray_status = ctk.CTkLabel(
            right_frame,
            text='–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç—Ä–µ–µ',
            text_color='#27ae60',
            font=ctk.CTkFont(size=12)
        )
        self.tray_status.pack(side='right')

    def create_tray_icon(self):
        """–°–æ–∑–¥–∞–µ—Ç –∏–∫–æ–Ω–∫—É –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ç—Ä–µ–µ"""
        try:
            import pystray
            from pystray import MenuItem as item

            def create_image():
                width = 64
                height = 64
                image = Image.new('RGB', (width, height), '#1a1a1a')
                dc = ImageDraw.Draw(image)
                dc.rectangle([10, 10, width-10, height-10], fill='#f1c40f', outline='#f39c12', width=2)

                for i in range(15, height-15, 8):
                    dc.line([15, i, width-15, i], fill='#d35400', width=1)
                
                return image
            
            menu = pystray.Menu(
                item('–û—Ç–∫—Ä—ã—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫', self.show_from_tray),
                item('–í–µ—Ö–æ–¥', self.quit_app)
            )

            self.tray_icon =  pystray.Icon(
                'sticky_notes_planner',
                create_image(),
                '–ú–æ–π —Å—Ç–∏–∫–µ—Ä-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫',
                menu
            )

            import threading
            def run_tray_icon():
                self.tray_icon_running = True
                self.tray_icon.run()

            thread = threading.Thread(target=run_tray_icon, daemon=True)
            thread.start()

        except ImportError as e:
            print(f'–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ pystray –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {e}')
            self.show_pystray_error()
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Ç—Ä–µ—è: {e}')

    def show_pystray_error(self):
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        error_label = ctk.CTkLabel(
            self,
            text='–î–ª—è —Ä–∞–±–æ—Ç—ã —Ä–∞–±–æ—Ç—ã —Å —Ç—Ä–µ–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pystray',
            text_color="#e74c3c",
            font=ctk.CTkFont(size=12)
        )
        error_label.grid(row=2, column=0, pady=10)